<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    
   	 	 <security:http auto-config="true" use-expressions="true">  
    	
    			<security:intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN')" />
				<security:intercept-url pattern="/user/**" access="hasAnyRole('ROLE_USER')" />
				<security:intercept-url pattern="/login" access="permitAll" />
				<security:intercept-url pattern="/**" access="permitAll" />
    		<!-- access denied page -->
			<security:access-denied-handler error-page="/403" />
	
			<security:form-login
			    login-page="/login"
			    default-target-url="/"
				authentication-failure-url="/loginerror"
				login-processing-url="/j_spring_security_check"
				username-parameter="userID"
				password-parameter="password" />
				
				
			<security:logout logout-url="/logout" logout-success-url="/index"  />
			<!-- enable csrf protection -->
			<security:csrf disabled="true" />
    		
    		
    	</security:http>
    	
       	<authentication-manager>
    		<authentication-provider>
    			<jdbc-user-service
						data-source-ref="dataSource"
						authorities-by-username-query="Select email, role from UserTable WHERE email = ?"
						users-by-username-query="Select email, pw,'true' from UserTable WHERE email = ?" />
				
    		</authentication-provider>
    	</authentication-manager>
    	
    </beans:beans>